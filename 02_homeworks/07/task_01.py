"""
1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса
   (метод __init__()), который должен принимать данные (список списков) для
   формирования матрицы. Подсказка: матрица — система некоторых математических
   величин, расположенных в виде прямоугольной схемы. Примеры матриц вы найдете
   в методичке. Следующий шаг — реализовать перегрузку метода __str__() для
   вывода матрицы в привычном виде. Далее реализовать перегрузку метода
   __add__() для реализации операции сложения двух объектов класса Matrix (двух
   матриц). Результатом сложения должна быть новая матрица. Подсказка: сложение
   элементов матриц выполнять поэлементно — первый элемент первой строки первой
   матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix():
    def __init__(self, li) -> None:
        self.li = li

    def __str__(self):
        str_ = ''
        for i in self.li:
            str_ = str_ + \
                str(i).replace('[', '').replace(']', '').replace(',', '') + '\n'
        str_ = str_[:-1]
        return str_

    def __add__(self, another):
        li_one = self.li[:]
        li_two = another.li[:]
        result = []
        for i in range(len(li_one)):
            sub_li = []
            for j in range(len(li_one[i])):
                sub_li.append(li_one[i][j] + li_two[i][j])
            result.append(sub_li)
        return result


m_one = [
    [1, 1, 1, ],
    [2, 2, 2, ],
    [3, 3, 3, ],
]

m_two = [
    [4, 4, 4, ],
    [5, 5, 5, ],
    [6, 6, 6, ],
]

a = Matrix(m_one)
b = Matrix(m_two)
c = Matrix(a + b)

print(a, '-' * 5, sep='\n')
print(b, '-' * 5, sep='\n')
print(c)
